/* jshint -W008 */
// Extends Gun

(function(game) {
  'use strict';

  function Shotgun(O) {
    if (!game.Gun) console.die('[Shotgun] game.Gun non exists, unable to extend!');
    O = O || {};

    var shotgun = new game.Gun();

    shotgun.key = 'shotgun';
    shotgun.iText = 'Pickup shotgun';

    // Custom properties
    shotgun.ammo = O.ammo || Shotgun.AMMO || shotgun.ammo;
    shotgun.ammoMax = shotgun.ammo;
    shotgun.dmg = O.dmg || Shotgun.DMG || shotgun.dmg;
    shotgun.reloadTime = O.reloadTime || Shotgun.RELOAD_TIME || shotgun.reloadTime;
    shotgun.fireRate = O.fireRate || (6000 / Shotgun.FIRE_RATE) || shotgun.fireRate;
    shotgun.recoil = O.recoil || Shotgun.RECOIL || shotgun.recoil;
    shotgun.blowback = O.blowback || Shotgun.BLOWBACK || shotgun.blowback;
    shotgun.range = O.range || Shotgun.RANGE || shotgun.range;
    shotgun.multishot = O.multishot || Shotgun.MULTISHOT || shotgun.multishot;
    shotgun.soundShot = game.sound.shotgun.shot;


    // Change main model
    if (!Shotgun.voxel3DModel) console.die('[Shotgun] Missing voxel3DModel (generated by Loader)');
    shotgun.remove(shotgun.main);
    shotgun.main = Shotgun.voxel3DModel[THREE.Math.randInt(0, Shotgun.voxel3DModel.length - 1)].clone();
    shotgun.add(shotgun.main);

    // Bind
    for (var p in Shotgun.prototype) shotgun[p] = Shotgun.prototype[p];

    return shotgun;
  }

  // Static stuff
  Shotgun.AMMO = 5;
  Shotgun.DMG = 60;
  Shotgun.RELOAD_TIME = 4000;
  Shotgun.RECOIL = .3;
  Shotgun.BLOWBACK = 12;
  Shotgun.MULTISHOT = 4;
  Shotgun.geometry = new THREE.BoxGeometry(24, 16, 4);

  game.Shotgun = Shotgun;
}(game));